{"version":3,"sources":["../node_modules/@material-ui/core/esm/styles/useTheme.js","../node_modules/@material-ui/core/esm/Container/Container.js","pages/Contents.js"],"names":["useTheme","useThemeWithoutDefault","defaultTheme","Container","React","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","theme","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","Contents","user","location","match","history","makeStyles","flexDirection","toolbar","content","height","overflow","alignItems","container","paddingTop","paddingBottom","flexGrow","nav","marginTop","borderBottom","useStyles","useState","setValue","onChange","event","newValue","console","log","push","indicatorColor","textColor","label","path","Calendar","Posts","Repertoire","exact","render"],"mappings":"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","file":"static/js/8.a869bdf8.chunk.js","sourcesContent":["import { useTheme as useThemeWithoutDefault } from '@material-ui/styles';\nimport React from 'react';\nimport defaultTheme from './defaultTheme';\nexport default function useTheme() {\n  var theme = useThemeWithoutDefault() || defaultTheme;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  return theme;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React, { Component, useState, useEffect } from 'react';\r\nimport { Home, Calendar, Posts, Profile, Repertoire } from 'pages';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Head from '../components/Head';\r\nimport ItemList from '../components/ItemList';\r\nimport ItemCreate from '../components/ItemCreate';\r\nimport { ItemProvider } from '../ItemContext';\r\nimport axios from 'axios';\r\nimport AuthRoute from 'components/AuthRoute'\r\nimport AuthenticationService from 'lib/AuthenticationService';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport CustomDrawer from 'components/CustomDrawer'\r\nimport CustomAppBar from 'components/CustomAppBar'\r\n\r\nconst Contents = ({ user, match, location, history }) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n        },\r\n        toolbar: {\r\n          paddingRight: 24, // keep right padding when drawer closed\r\n        },\r\n        content: {\r\n          display: 'flex',\r\n          height: '100vh',\r\n          overflow: 'auto',\r\n          flexDirection: 'row',\r\n          alignItems: 'stretch',\r\n        },\r\n        container: {\r\n          paddingTop: theme.spacing(4),\r\n          paddingBottom: theme.spacing(4),\r\n          flexGrow: '2',\r\n          width: '60%',\r\n        },\r\n        nav: {\r\n          width: '100%',\r\n          paddingTop: theme.spacing(8),\r\n          marginTop: theme.spacing(3),\r\n          paddingLeft: '30%',\r\n          display: 'flex',\r\n          overflow: 'auto',\r\n          borderBottom: '1px solid gray'\r\n          //flexDirection: 'column',\r\n        },\r\n    }));\r\n    \r\n    /* view 관련 변수 선언 시작 */\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n      console.log(newValue);\r\n      console.log(location);\r\n      console.log(history);\r\n      history.push(newValue);\r\n    };\r\n\r\n    return (\r\n    <div>\r\n        <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            className={classes.nav}\r\n        >\r\n            <Tab value=\"/\" label=\"Overview\" />\r\n            <Tab value=\"/calendar\" label=\"Calendar\" />\r\n            <Tab value=\"/posts\" label=\"Posts\" />\r\n            <Tab value=\"/repertoire\" label=\"Repertoire\" />\r\n            \r\n        </Tabs>\r\n\r\n        <main className={classes.content}>\r\n            <Profile user={user} />\r\n            <Container maxWidth=\"lg\" className={classes.container}>              \r\n                <Switch>\r\n                    <Route path=\"/calendar\" component={Calendar}/>\r\n                    <Route path=\"/posts\" component={Posts}/>\r\n                    <Route path=\"/repertoire\" component={Repertoire}/>\r\n                    <Route exact path=\"/\" render={props => <Home {...props}/>}/>\r\n                </Switch>\r\n            </Container>\r\n        </main>\r\n    </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Contents;\r\n\r\n/**\r\n * \r\n * <AuthRoute\r\n                authenticated={authenticated}\r\n                path=\"/profile\"\r\n                render={props => <Profile user={user} {...props} />}\r\n                />\r\n\r\n */"],"sourceRoot":""}