{"version":3,"sources":["withSplitting.js","pages/Posts.js","pages/Post.js","pages/index.js","components/ItemList.js","components/ItemCreate.js","components/AuthRoute.js","components/LogoutButton.js","components/CustomDrawer.js","components/Menu.js","components/CustomAppBar.js","shared/App.js","client/Root.js","index.js","lib/AuthenticationService.js","customAxios.js"],"names":["withSplitting","getComponent","props","state","Splitted","then","default","setState","this","Component","Posts","match","to","url","exact","path","render","component","Post","params","id","Home","About","SignIn","AuthResult","Profile","SignUp","ItemList","React","AuthRoute","authenticated","rest","pathname","from","location","withRouter","logout","history","onClick","push","CustomDrawer","ListItem","ListItemIcon","ListItemText","ListSubheader","open","handleDrawer","useStyles","makeStyles","theme","toolbarIcon","display","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","position","whiteSpace","width","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","spacing","breakpoints","up","useHistory","classes","menuList","text","icon","Drawer","variant","paper","clsx","className","IconButton","Divider","List","map","item","index","button","primary","CustomAppBar","root","paddingRight","appBar","zIndex","drawer","appBarShift","marginLeft","menuButton","marginRight","menuButtonHidden","title","flexGrow","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","flexDirection","fixedHeight","AppBar","Toolbar","edge","color","aria-label","Typography","noWrap","Badge","badgeContent","mdiLogin","size","mdiLogout","App","useState","setOpen","handleDrawerOpen","handleDrawerClose","user","setUser","login","AuthenticationService","getLoggedInUserName","useEffect","CssBaseline","Container","maxWidth","Root","ReactDOM","document","getElementById","firstName","lastName","email","password","axios","post","username","token","console","log","localStorage","setItem","setupAxiosInterceptors","interceptors","request","use","config","getItem","headers","error","Promise","reject","removeItem","customAxios","callback","method","baseURL","withCredentials","response","data"],"mappings":"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","file":"static/js/main.a78b2305.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst withSplitting = getComponent => {\r\n  // 여기서 getComponent 는 () => import('./SplitMe') 의 형태로 함수가 전달되야합니다.\r\n  class WithSplitting extends Component {\r\n    state = {\r\n      Splitted: null\r\n    };\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      getComponent().then(({ default: Splitted }) => {\r\n        this.setState({\r\n          Splitted\r\n        });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { Splitted } = this.state;\r\n      if (!Splitted) {\r\n        return null;\r\n      }\r\n      return <Splitted {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return WithSplitting;\r\n};\r\n\r\nexport default withSplitting;","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Post } from 'pages'; \r\n\r\nconst Posts = ({match}) => {\r\n    return (\r\n        <div>\r\n           <h2>Post List</h2> \r\n           <ul>\r\n                <li><Link to={`${match.url}/1`}>Post #1</Link></li>\r\n                <li><Link to={`${match.url}/2`}>Post #2</Link></li>\r\n                <li><Link to={`${match.url}/3`}>Post #3</Link></li>\r\n                <li><Link to={`${match.url}/4`}>Post #4</Link></li>\r\n           </ul>\r\n           <Route exact path={match.url} render={()=>(<h3>Please select any post</h3>)}/>\r\n           <Route path={`${match.url}/:id`} component={Post}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\n\r\nconst Post = ({match}) => {\r\n    return (\r\n        <div>\r\n            포스트 {match.params.id}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import withSplitting from '../withSplitting';\r\n\r\nexport { default as Posts } from './Posts';\r\nexport { default as Post } from './Post';\r\n\r\nexport const Home = withSplitting(() => import('./Home'));\r\nexport const About = withSplitting(() => import('./About'));\r\nexport const SignIn = withSplitting(() => import('./SignIn'));\r\nexport const AuthResult = withSplitting(() => import('./AuthResult'));\r\nexport const Profile = withSplitting(() => import('./Profile'));\r\nexport const SignUp = withSplitting(() => import('./SignUp'));\r\n","import React from 'react';\r\nimport Item from './Item';\r\nimport { useItemState } from '../ItemContext';\r\nimport * as CommonUtils from '../CommonUtils.js';\r\n\r\nfunction ItemList() {\r\n    const items = useItemState();\r\n\r\n    return (\r\n        <div className=\"listBlock\">\r\n            {items.map(item => (\r\n                <Item \r\n                key={item.id}\r\n                id={item.id}\r\n                text={item.text}\r\n                type={item.type}\r\n                value={CommonUtils.Format_comma(item.value)}\r\n                category={item.category}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport { MdAdd, MdRemove } from 'react-icons/md';\r\nimport { useItemDispatch, useItemNextId } from '../ItemContext';\r\n\r\nfunction ItemCreate({type}) {\r\n    const [open, setOpen] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [value, setValue] = useState(0);\r\n\r\n    const dispatch = useItemDispatch();\r\n    const nextId = useItemNextId();\r\n\r\n    const onToggle = () => {\r\n        setOpen(!open);\r\n        setValue(0);\r\n    }\r\n\r\n    const onChangeText = e => setText(e.target.value);\r\n    const onChangeValue = e => setValue(e.target.value);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'CREATE',\r\n            item: {\r\n                id: nextId.current,\r\n                text: text,\r\n                type: type,\r\n                value: value\r\n            }\r\n        });\r\n        setText('');\r\n        setOpen(false);\r\n        setValue(0);\r\n        nextId.current += 1;\r\n    };\r\n\r\n    const styles = {\r\n            background: open? \"#ff6b6b\":\"#38d9a9\",\r\n            ':hover' : {\r\n                background: open? \"#ff8787\":\"63e6be\"\r\n            },\r\n            ':active': {\r\n                background: open? \"#fa5252\":\"20c997\"\r\n            },\r\n            transform: open? \"translate(-50%, 50%) rotate(45deg)\" : \"translate(-50%, 50%)\"\r\n        }\r\n        return (\r\n            <>\r\n            {open && (\r\n                <div className=\"insertFormPositioner\">\r\n                    <form className=\"insertForm\">\r\n                        <input type=\"text\" className=\"input\" \r\n                            autoFocus \r\n                            placeholder=\"내역을 입력하세요.\" \r\n                            onChange={onChangeText}\r\n                            text={text}\r\n                            type={type}\r\n                        />\r\n                        <input type=\"text\" className=\"input\"\r\n                            onChange={onChangeValue}\r\n                            value={value}\r\n                        />\r\n                        <div onClick={onSubmit}>\r\n                            <Button>입력</Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n            <button className=\"circleButton\" style={styles} onClick={onToggle} open={open}>\r\n                {type === \"in\"? <MdAdd /> : <MdRemove />}\r\n            </button>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default React.memo(ItemCreate);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from 'lib/AuthenticationService'\r\n\r\nfunction AuthRoute({ authenticated, component: Component, render, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authenticated ? (\r\n          render ? render(props) : <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: '/signIn', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from \"react\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nfunction LogoutButton({ authenticated, logout, history }) {\r\n  const handleClick = () => {\r\n    logout()\r\n    history.push(\"/\")\r\n  }\r\n  return <button onClick={handleClick}>Logout</button>\r\n}\r\n\r\nexport default withRouter(LogoutButton)","import React, {useState} from 'react';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport clsx from 'clsx';\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LogoutButton from 'components/LogoutButton'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport { mainListItems, secondaryListItems } from 'components/Menu';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst CustomDrawer = ({open, handleDrawer}) => {\r\n\r\n    const drawerWidth = 240;\r\n    const useStyles = makeStyles((theme) => ({\r\n        toolbarIcon: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'flex-end',\r\n            padding: '0 8px',\r\n            ...theme.mixins.toolbar,\r\n          },\r\n        drawerPaper: {\r\n            position: 'relative',\r\n            whiteSpace: 'nowrap',\r\n            width: drawerWidth,\r\n            transition: theme.transitions.create('width', {\r\n              easing: theme.transitions.easing.sharp,\r\n              duration: theme.transitions.duration.enteringScreen,\r\n            }),\r\n          },\r\n          drawerPaperClose: {\r\n            overflowX: 'hidden',\r\n            transition: theme.transitions.create('width', {\r\n              easing: theme.transitions.easing.sharp,\r\n              duration: theme.transitions.duration.leavingScreen,\r\n            }),\r\n            width: theme.spacing(7),\r\n            [theme.breakpoints.up('sm')]: {\r\n              width: theme.spacing(9),\r\n            },\r\n          },\r\n    }));\r\n\r\n    const history  = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const menuList = [\r\n        {\r\n            text : \"Home\",\r\n            icon : <DashboardIcon />,\r\n            onClick : () => history.push(\"/\")\r\n            \r\n        },\r\n        {\r\n            text : \"Profile\",\r\n            icon : <DashboardIcon />,\r\n            onClick : () => history.push(\"/profile\")\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                <IconButton onClick={handleDrawer}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {menuList.map((item, index) => {\r\n                        const {text, icon, onClick} = item;\r\n                        return (<ListItem button key={text} onClick={onClick}>\r\n                          {icon && <ListItemIcon> {icon} </ListItemIcon>}\r\n                        <ListItemText primary={text} />\r\n                      </ListItem> );\r\n                    })}\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CustomDrawer;\r\n\r\n\r\n/**\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>{mainListItems}</List>\r\n                <Divider />\r\n                <List>{secondaryListItems}</List>\r\n            </Drawer>\r\n*/","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LogoutButton from 'components/LogoutButton'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nconst Menu = ({authenticated, logout}) => {\r\n    const activeStyle = {\r\n        color: 'green',\r\n        fontSize: '2rem'\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                <li><NavLink exact to=\"/\" activeStyle={activeStyle}>Home</NavLink></li>\r\n                <li><NavLink exact to=\"/about\" activeStyle={activeStyle}>About</NavLink></li>\r\n                <li><NavLink to=\"/about/foo\" activeStyle={activeStyle}>About Foo</NavLink></li>\r\n                <li><NavLink to=\"/posts\" activeStyle={activeStyle}>Posts</NavLink></li>\r\n                <li><NavLink to=\"/signIn\" activeStyle={activeStyle}>Sign in</NavLink></li>\r\n                <li><NavLink to=\"/signUpWithAuthentication\" activeStyle={activeStyle}>Sign up</NavLink></li>\r\n                <li><NavLink to=\"/profile\" activeStyle={activeStyle}>Profile</NavLink></li>\r\n\r\n                {authenticated ? (<LogoutButton logout={logout} />) : null}\r\n            </ul>\r\n            <hr/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <DashboardIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Dashboard\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <ShoppingCartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Orders\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <PeopleIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Customers\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <BarChartIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Reports\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <LayersIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Integrations\" />\r\n      </ListItem>\r\n    </div>\r\n  );\r\n  \r\nexport const secondaryListItems = (\r\n    <div>\r\n      <ListSubheader inset>Saved reports</ListSubheader>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <AssignmentIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Current month\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <AssignmentIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Last quarter\" />\r\n      </ListItem>\r\n      <ListItem button>\r\n        <ListItemIcon>\r\n          <AssignmentIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"Year-end sale\" />\r\n      </ListItem>\r\n    </div>\r\n  );\r\n  \r\n/*\r\nimport React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ShoppingCartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Orders\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Customers\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reports\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LayersIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Integrations\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end sale\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n*/","import Icon from '@mdi/react'\r\nimport { mdiLogin } from '@mdi/js'\r\nimport { mdiLogout } from '@mdi/js';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\nconst CustomAppBar = ({authenticated, open, handleDrawer, logout}) => {\r\n    const drawerWidth = 240;\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n        display: 'flex',\r\n        },\r\n        toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n        },\r\n        toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        },\r\n        appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        },\r\n        appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        },\r\n        menuButton: {\r\n        marginRight: 36,\r\n        },\r\n        menuButtonHidden: {\r\n        display: 'none',\r\n        },\r\n        title: {\r\n        flexGrow: 1,\r\n        },\r\n        appBarSpacer: theme.mixins.toolbar,\r\n        content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        },\r\n        container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n        },\r\n        paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n        },\r\n        fixedHeight: {\r\n        height: 240,\r\n        },\r\n    }));\r\n    const history  = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const SignIn = () => {\r\n        history.push(\"/SignIn\")\r\n    }\r\n    \r\n    const SignUp = () => {\r\n        history.push(\"/SignUp\")\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawer}\r\n                    className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                    Dashboard\r\n                </Typography>\r\n                <IconButton \r\n                    color=\"inherit\"\r\n                    className={clsx(!authenticated && classes.menuButtonHidden)}\r\n                >\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                    <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <IconButton \r\n                    color=\"inherit\" \r\n                    onClick={SignUp}\r\n                    className={clsx(authenticated && classes.menuButtonHidden)}\r\n                >\r\n                    <Badge color=\"secondary\">\r\n                    <PersonAddIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                { !authenticated && \r\n                <IconButton \r\n                    color=\"inherit\" \r\n                    onClick={SignIn}\r\n                    className={clsx(authenticated && classes.menuButtonHidden)}\r\n                >\r\n                    <Icon path={mdiLogin}\r\n                        title=\"Sign In\"\r\n                        size={1}\r\n                        color=\"white\"\r\n                    />\r\n                </IconButton>\r\n                }\r\n                <IconButton \r\n                    color=\"inherit\" \r\n                    onClick={logout}\r\n                    className={clsx(!authenticated && classes.menuButtonHidden)}\r\n                >\r\n                    <Icon path={mdiLogout}\r\n                        title=\"Logout\"\r\n                        size={1}\r\n                        color=\"white\"\r\n                    />\r\n                </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomAppBar;","\r\n\r\nimport 'shared/App.scss';\r\nimport React, { Component, useState, useEffect } from 'react';\r\nimport { Home, About, Posts, SignIn, AuthResult, Profile, SignUp } from 'pages';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Head from '../components/Head';\r\nimport ItemList from '../components/ItemList';\r\nimport ItemCreate from '../components/ItemCreate';\r\nimport { ItemProvider } from '../ItemContext';\r\nimport axios from 'axios';\r\nimport AuthRoute from 'components/AuthRoute'\r\nimport AuthenticationService from 'lib/AuthenticationService';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport List from '@material-ui/core/List';\r\n\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport CustomDrawer from 'components/CustomDrawer'\r\nimport CustomAppBar from 'components/CustomAppBar'\r\n\r\nconst App= () => {\r\n  \r\n  const drawerWidth = 240;\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      overflow: 'auto',\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n      height: 240,\r\n    },\r\n  }));\r\n  /* view 관련 변수 선언 시작 */\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n\r\n    const handleDrawerOpen = () => {\r\n      setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n      setOpen(false);\r\n    };\r\n    \r\n\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n    /* view 관련 변수 선언 끝 */\r\n\r\n\r\n    const [user, setUser] = useState(null);\r\n    const authenticated = user != null;\r\n  \r\n    const login = () => setUser(AuthenticationService.getLoggedInUserName());\r\n    const logout = () => {\r\n      setUser(null)\r\n      AuthenticationService.logout()\r\n    };\r\n\r\n    useEffect(() => {\r\n      if(open){\r\n        handleDrawerOpen()\r\n      }else{\r\n        handleDrawerClose()\r\n      }\r\n    }, [open]);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n      <CssBaseline />\r\n      <CustomAppBar authenticated={authenticated} open={open} handleDrawer={handleDrawerOpen} logout={logout}/>\r\n      <CustomDrawer open={open} handleDrawer={handleDrawerClose}/>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Route exact path=\"/\" render={props => <Home {...props}/>}/>\r\n            <Switch>\r\n                <Route path=\"/about/:name\" component={About}/>\r\n                <Route path=\"/about\" component={About}/>\r\n            </Switch>\r\n            <Route path=\"/posts\" component={Posts}/>\r\n            \r\n            <Route\r\n              path=\"/signIn\"\r\n              render={props => (\r\n                <SignIn authenticated={authenticated} login={login} handleDrawer={handleDrawerClose} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route path=\"/signUp\" \r\n                  render={props => <SignUp login={login} handleDrawer={handleDrawerClose} {...props}/>}\r\n            />\r\n            <Route path=\"/authResult\" component={AuthResult}/>\r\n            <AuthRoute\r\n              authenticated={authenticated}\r\n              path=\"/profile\"\r\n              render={props => <Profile user={user} {...props} />}\r\n            />\r\n        </Container>\r\n      </main>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from 'shared/App';\r\n\r\n\r\nconst Root = () => (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Root;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'; \r\nimport Root from './client/Root';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));","import customAxios from '../customAxios';\r\nimport axios from 'axios'\r\n\r\nclass AuthenticationService {\r\n    signUp(firstName, lastName, email, password){\r\n        return axios.post('http://localhost:8080/signUp', {\r\n            firstName, \r\n            lastName, \r\n            email, \r\n            password\r\n        });\r\n    }\r\n    // send username, password to the SERVER\r\n    executeJwtAuthenticationService(username, password) {\r\n        return axios.post('http://localhost:8080/authenticate', {\r\n            username,\r\n            password\r\n        });\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(username, token) {\r\n        console.log(\"===registerSuccessfulLoginForJwt===\")\r\n        \r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('authenticatedUser', username);\r\n        this.setupAxiosInterceptors();\r\n    }\r\n\r\n    setupAxiosInterceptors() {\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = 'Bearer ' + token;\r\n                }\r\n                // config.headers['Content-Type'] = 'application/json';\r\n                return config;\r\n            },\r\n            error => {\r\n                Promise.reject(error)\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        //sessionStorage.removeItem('authenticatedUser');\r\n        localStorage.removeItem(\"authenticatedUser\");\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        const token = localStorage.getItem('token');\r\n        console.log(\"===UserloggedInCheck===\");\r\n        console.log(token);\r\n\r\n        if (token) {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        //let user = sessionStorage.getItem('authenticatedUser')\r\n        let user = localStorage.getItem('authenticatedUser');\r\n        if(user===null) return '';\r\n        return user;\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService();","import axios from 'axios'; // 액시오스\r\n\r\nexport default function customAxios(url, callback) {\r\n  axios(\r\n    {\r\n      url: '/api' + url,\r\n      method: 'post',\r\n\r\n      /**\r\n       * 개발 환경에서의 크로스 도메인 이슈를 해결하기 위한 코드로\r\n       * 운영 환경에 배포할 경우에는 15~16행을 주석 처리합니다.\r\n       * \r\n       * ※크로스 도메인 이슈: 브라우저에서 다른 도메인으로 URL 요청을 하는 경우 나타나는 보안문제\r\n       */\r\n      baseURL: 'http://localhost:8080',\r\n      withCredentials: true,\r\n    }\r\n  ).then(function (response) {\r\n    callback(response.data);\r\n  });\r\n}"],"sourceRoot":""}