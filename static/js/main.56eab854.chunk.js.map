{"version":3,"sources":["components/CustomAppBar.js","shared/App.js","client/Root.js","index.js","withSplitting.js","pages/Posts.js","pages/Post.js","pages/index.js","lib/AuthenticationService.js","customAxios.js"],"names":["CustomAppBar","authenticated","logout","useStyles","makeStyles","theme","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButtonHidden","display","title","flexGrow","history","useHistory","classes","AppBar","position","className","Toolbar","Typography","component","variant","color","noWrap","IconButton","clsx","Badge","badgeContent","onClick","push","path","mdiLogin","size","mdiLogout","App","root","flexDirection","useState","user","setUser","login","AuthenticationService","getLoggedInUserName","CssBaseline","render","props","Root","ReactDOM","document","getElementById","withSplitting","getComponent","state","Splitted","then","default","setState","this","Component","Posts","match","to","url","exact","Post","params","id","Home","Calendar","SignIn","Profile","SignUp","Contents","Repertoire","firstName","lastName","email","password","axios","post","username","token","console","log","localStorage","setItem","setupAxiosInterceptors","interceptors","request","use","config","getItem","headers","error","Promise","reject","removeItem","customAxios","callback","method","baseURL","withCredentials","response","data"],"mappings":"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","file":"static/js/main.56eab854.chunk.js","sourcesContent":["import Icon from '@mdi/react'\r\nimport { mdiLogin } from '@mdi/js'\r\nimport { mdiLogout } from '@mdi/js';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\n\r\nconst CustomAppBar = ({authenticated, logout}) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n        },\r\n        appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        },\r\n        menuButtonHidden: {\r\n        display: 'none',\r\n        },\r\n        title: {\r\n        flexGrow: 1,\r\n        },\r\n    }));\r\n    const history  = useHistory();\r\n\r\n    const classes = useStyles();\r\n    const SignIn = () => {\r\n        history.push(\"/SignIn\")\r\n    }\r\n    \r\n    const SignUp = () => {\r\n        history.push(\"/SignUp\")\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"absolute\" className={classes.appBar}>\r\n            <Toolbar className={classes.toolbar}>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                Lessonus\r\n            </Typography>\r\n            <IconButton \r\n                color=\"inherit\"\r\n                className={clsx(!authenticated && classes.menuButtonHidden)}\r\n            >\r\n                <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n                </Badge>\r\n            </IconButton>\r\n            <IconButton \r\n                color=\"inherit\" \r\n                onClick={SignUp}\r\n                className={clsx(authenticated && classes.menuButtonHidden)}\r\n            >\r\n                <Badge color=\"secondary\">\r\n                <PersonAddIcon />\r\n                </Badge>\r\n            </IconButton>\r\n            { !authenticated && \r\n            <IconButton \r\n                color=\"inherit\" \r\n                onClick={SignIn}\r\n                className={clsx(authenticated && classes.menuButtonHidden)}\r\n            >\r\n                <Icon path={mdiLogin}\r\n                    title=\"Sign In\"\r\n                    size={1}\r\n                    color=\"white\"\r\n                />\r\n            </IconButton>\r\n            }\r\n            <IconButton \r\n                color=\"inherit\" \r\n                onClick={logout}\r\n                className={clsx(!authenticated && classes.menuButtonHidden)}\r\n            >\r\n                <Icon path={mdiLogout}\r\n                    title=\"Logout\"\r\n                    size={1}\r\n                    color=\"white\"\r\n                />\r\n            </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    \r\n    );\r\n};\r\n\r\nexport default CustomAppBar;","\r\n\r\nimport 'shared/App.scss';\r\nimport React, { useState } from 'react';\r\nimport { SignIn, SignUp, Contents } from 'pages';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport AuthenticationService from 'lib/AuthenticationService';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CustomAppBar from 'components/CustomAppBar'\r\n\r\nconst App= () => {\r\n  const useStyles = makeStyles(() => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n  }));\r\n\r\n  /* view 관련 변수 선언 시작 */\r\n    const classes = useStyles();\r\n    /* view 관련 변수 선언 끝 */\r\n\r\n    const [user, setUser] = useState(null);\r\n    const authenticated = user != null;\r\n      \r\n    const login = () => setUser(AuthenticationService.getLoggedInUserName());\r\n    const logout = () => {\r\n      setUser(null)\r\n      AuthenticationService.logout()\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <CustomAppBar authenticated={authenticated} logout={logout}/>\r\n        <Switch>\r\n          <Route\r\n            path=\"/signIn\"\r\n            render={props => (\r\n              <SignIn authenticated={authenticated} login={login}  {...props} />\r\n            )}\r\n          />\r\n          <Route path=\"/signUp\" \r\n                render={props => <SignUp login={login} {...props}/>}\r\n          />\r\n          <Route path=\"/\" render={props => <Contents user={user} {...props}/>}/>\r\n        </Switch>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from 'shared/App';\r\n\r\n\r\nconst Root = () => (\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Root;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'; \r\nimport Root from './client/Root';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));","import React, { Component } from 'react';\r\n\r\nconst withSplitting = getComponent => {\r\n  // 여기서 getComponent 는 () => import('./SplitMe') 의 형태로 함수가 전달되야합니다.\r\n  class WithSplitting extends Component {\r\n    state = {\r\n      Splitted: null\r\n    };\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      getComponent().then(({ default: Splitted }) => {\r\n        this.setState({\r\n          Splitted\r\n        });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { Splitted } = this.state;\r\n      if (!Splitted) {\r\n        return null;\r\n      }\r\n      return <Splitted {...this.props} />;\r\n    }\r\n  }\r\n\r\n  return WithSplitting;\r\n};\r\n\r\nexport default withSplitting;","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport { Post } from 'pages'; \r\n\r\nconst Posts = ({match}) => {\r\n    return (\r\n        <div>\r\n           <h2>Post List</h2> \r\n           <ul>\r\n                <li><Link to={`${match.url}/1`}>Post #1</Link></li>\r\n                <li><Link to={`${match.url}/2`}>Post #2</Link></li>\r\n                <li><Link to={`${match.url}/3`}>Post #3</Link></li>\r\n                <li><Link to={`${match.url}/4`}>Post #4</Link></li>\r\n           </ul>\r\n           <Route exact path={match.url} render={()=>(<h3>Please select any post</h3>)}/>\r\n           <Route path={`${match.url}/:id`} component={Post}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;","import React from 'react';\r\n\r\nconst Post = ({match}) => {\r\n    return (\r\n        <div>\r\n            포스트 {match.params.id}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import withSplitting from '../withSplitting';\r\n\r\nexport { default as Posts } from './Posts';\r\nexport { default as Post } from './Post';\r\n\r\nexport const Home = withSplitting(() => import('./Home'));\r\nexport const Calendar = withSplitting(() => import('./Calendar'));\r\nexport const SignIn = withSplitting(() => import('./SignIn'));\r\nexport const AuthResult = withSplitting(() => import('./AuthResult'));\r\nexport const Profile = withSplitting(() => import('./Profile'));\r\nexport const SignUp = withSplitting(() => import('./SignUp'));\r\nexport const Contents = withSplitting(() => import('./Contents'));\r\nexport const Repertoire = withSplitting(() => import('./Repertoire'));\r\n\r\n","import customAxios from '../customAxios';\r\nimport axios from 'axios'\r\n\r\nclass AuthenticationService {\r\n    signUp(firstName, lastName, email, password){\r\n        return axios.post('http://localhost:8080/signUp', {\r\n            firstName, \r\n            lastName, \r\n            email, \r\n            password\r\n        });\r\n    }\r\n    // send username, password to the SERVER\r\n    executeJwtAuthenticationService(username, password) {\r\n        return axios.post('http://localhost:8080/authenticate', {\r\n            username,\r\n            password\r\n        });\r\n    }\r\n\r\n    registerSuccessfulLoginForJwt(username, token) {\r\n        console.log(\"===registerSuccessfulLoginForJwt===\")\r\n        \r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('authenticatedUser', username);\r\n        this.setupAxiosInterceptors();\r\n    }\r\n\r\n    setupAxiosInterceptors() {\r\n        axios.interceptors.request.use(\r\n            config => {\r\n                const token = localStorage.getItem('token');\r\n                if (token) {\r\n                    config.headers['Authorization'] = 'Bearer ' + token;\r\n                }\r\n                // config.headers['Content-Type'] = 'application/json';\r\n                return config;\r\n            },\r\n            error => {\r\n                Promise.reject(error)\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        //sessionStorage.removeItem('authenticatedUser');\r\n        localStorage.removeItem(\"authenticatedUser\");\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        const token = localStorage.getItem('token');\r\n        console.log(\"===UserloggedInCheck===\");\r\n        console.log(token);\r\n\r\n        if (token) {\r\n            return true;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        //let user = sessionStorage.getItem('authenticatedUser')\r\n        let user = localStorage.getItem('authenticatedUser');\r\n        if(user===null) return '';\r\n        return user;\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService();","import axios from 'axios'; // 액시오스\r\n\r\nexport default function customAxios(url, callback) {\r\n  axios(\r\n    {\r\n      url: '/api' + url,\r\n      method: 'post',\r\n\r\n      /**\r\n       * 개발 환경에서의 크로스 도메인 이슈를 해결하기 위한 코드로\r\n       * 운영 환경에 배포할 경우에는 15~16행을 주석 처리합니다.\r\n       * \r\n       * ※크로스 도메인 이슈: 브라우저에서 다른 도메인으로 URL 요청을 하는 경우 나타나는 보안문제\r\n       */\r\n      baseURL: 'http://localhost:8080',\r\n      withCredentials: true,\r\n    }\r\n  ).then(function (response) {\r\n    callback(response.data);\r\n  });\r\n}"],"sourceRoot":""}